name: "bulk-resume-parser"

volumes:
  redis-data:
  minio-data:
  app-db-data:

services:
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    networks:
      - bulk-resume-parser
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env.docker
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "check_port_connectivity"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    networks:
      - bulk-resume-parser
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s
    volumes:
      - redis-data:/data

  minio:
    image: minio/minio:RELEASE.2025-04-22T22-12-26Z
    container_name: minio
    networks:
      - bulk-resume-parser
    ports:
      - "9000:9000"
      - "9001:9001"
    env_file:
      - .env.docker
    command: server /data --console-address ":9001"
    volumes:
      - minio-data:/data

  extract-archive:
    build:
      context: ./services/extract-archive
    image: yash6370/extract-archive-service:latest
    container_name: extract-archive
    networks:
      - bulk-resume-parser
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env.docker

  conversion-director:
    build:
      context: ./services/conversion-director
    image: yash6370/conversion-director:latest
    container_name: conversion-director
    networks:
      - bulk-resume-parser
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env.docker

  word-to-txt:
    build:
      context: ./services/word-to-txt
    image: yash6370/word-to-txt-service:latest
    container_name: word-to-txt
    networks:
      - bulk-resume-parser
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env.docker

  pdf-to-txt:
    build:
      context: ./services/pdf-to-txt
    image: yash6370/pdf-to-txt-service:latest
    container_name: pdf-to-txt
    networks:
      - bulk-resume-parser
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env.docker

  img-to-txt:
    build:
      context: ./services/img-to-txt
    image: yash6370/img-to-txt-service:latest
    container_name: img-to-txt
    networks:
      - bulk-resume-parser
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env.docker

  txt-to-json:
    build:
      context: ./services/txt-to-json
    image: yash6370/txt-to-json-service:latest
    container_name: txt-to-json
    networks:
      - bulk-resume-parser
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env.docker

  aggregate-json:
    build:
      context: ./services/aggregate-json
    image: yash6370/aggregate-json-service:latest
    container_name: aggregate_json
    networks:
      - bulk-resume-parser
    depends_on:
      rabbitmq:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env.docker

  json-to-sheet:
    build:
      context: ./services/json-to-sheet
    image: yash6370/json-to-sheet-service:latest
    container_name: json-to-sheet
    networks:
      - bulk-resume-parser
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      minio:
        condition: service_started
    env_file:
      - .env.docker

    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 30s

  unoserver:
    image: ghcr.io/unoconv/unoserver-docker
    container_name: unoserver
    networks:
      - bulk-resume-parser
    ports:
      - "2003:2003"
    restart: unless-stopped

  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    image: yash6370/bulk-resume-parser:latest
    container_name: app
    networks:
      - bulk-resume-parser
    ports:
      - "3000:3000"
    env_file:
      - .env.docker
    volumes:
      - .:/app
      - /app/node_modules

  app-db:
    image: mysql:latest
    container_name: app-db
    networks:
      - bulk-resume-parser
    ports:
      - "${DB_PORT}:${DB_PORT}"
    env_file:
      - .env.docker
    volumes:
      - app-db-data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: "${DB_ROOT_PASSWORD}"
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "mysqladmin --user=root --password=${DB_ROOT_PASSWORD} --host=localhost --port=3306 ping",
        ]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s

  app-db-migrator:
    build:
      context: .
      dockerfile: db-migrator.Dockerfile
    container_name: app-db-migrator
    networks:
      - bulk-resume-parser
    env_file:
      - .env.docker
    depends_on:
      app-db:
        condition: service_healthy
    restart: on-failure

networks:
  bulk-resume-parser:
    name: bulk-resume-parser
